spring:
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
###########【Kafka配置】###########
  kafka:
    bootstrap-servers: test01:9093,test02:9093,test03:9093
  ###########【初始化生产者配置】###########
  # 重试次数
    producer: 
      retries: 0
  # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
      acks: 1
  # 批量大小
      batch-size: 16384
  # 当生产端积累的消息达到batch-size或接收到消息linger.ms后,生产者就会将消息提交给kafka
  # linger.ms为0表示每接收到一条消息就提交给kafka,这时候batch-size其实就没用了
  # 生产端缓冲区大小
      buffer-memory :  33554432
  # Kafka提供的序列化和反序列化类
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 提交延时
      properties:
        linger.ms: 0
        security:
          protocol: SASL_SSL
    # 自定义分区器
  # spring.kafka.producer.properties.partitioner.class: com.felix.kafka.producer.CustomizePartitioner
  ###########【初始化消费者配置】###########
  # 默认的消费组ID
    consumer:
      group-id: test111
  # 是否自动提交offset
      enable-auto-commit: true
  # 提交offset延时(接收到消息后多久提交offset)
      auto-commit-interval: 1000ms
  # 当kafka中没有初始offset或offset超出范围时将自动重置offset
  # earliest:重置为分区中最小的offset;
  # latest:重置为分区中最新的offset(消费分区中新产生的数据);
  # none:只要有一个分区不存在已提交的offset,就抛出异常;
      auto-offset-reset: earliest
  # Kafka提供的序列化和反序列化类
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 消费会话超时时间(超过这个时间consumer没有发送心跳,就会触发rebalance操作)
      properties:
        session.timeout.ms: 120000
        # 消费请求超时时间
        request.timeout.ms: 180000
        security:
          protocol: SASL_SSL
    # 消费端监听的topic不存在时，项目启动会报错(关掉)
    listener:
      missing-topics-fatal: false
    ssl:
      key-store-location: file:C:/client-keystore.jks
      key-store-password: 123456
      key-password: 123456
      trust-store-location: file:C:/client-truststore.jks
      trust-store-password: 123456
      key-store-type: JKS
      trust-store-type: JKS
    properties:
      sasl.mechanism: PLAIN
      # SASL_PLAINTEXT或者SASL_SSL
      security.protocol: SASL_SSL
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="testuser1" password="123456";
# 设置批量消费
# spring.kafka.listener.type: batch
# 批量消费每次最多消费多少条消息

